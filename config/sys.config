[
  {kernel, [
    %% Specifies the primary log level for Logger.
    %% Log events with the same, or a more severe level, pass through the primary log level check.
    %% This option is overwritten by MongooseIM config, once it is loaded.
    {logger_level, all},

    {logger, [
      %% Default filters applied to all events before passing them to handlers:
      {filters, log, [
        %% If we want to see complete accumulator in logs
        %% {format_packet_filter, {fun M:format_packet_filter/2, no_state}},
        {format_stacktrace_filter, {fun cool_tools_logger:format_stacktrace_filter/2, no_state}}
        %% {format_term_filter, {fun M:format_term_filter/2, [toml_value]}}
      ]},

      %% Shell log handler:
      % {handler, shell_log, logger_std_h, #{
      %      level => all,
      %      formatter => {flatlog, #{
      %        map_depth => 3,
      %        term_depth => 50
      %      }}
      % }},

      %% There are two file handlers below, writing same log messages,
      %% but in different formats.
      %% Remove one of them, if you don't need it in production.
      %% Less handlers and less verbose log levels would improve performance.

      %% File log handler:
      {handler, disk_log, logger_disk_log_h, #{
        level => all,
        config => #{
          file => "log/cool_tools.log",
          type => wrap,
          max_no_files => 5,
          max_no_bytes => 2097152,
          sync_mode_qlen => 2000, % If sync_mode_qlen is set to the same value as drop_mode_qlen,
          drop_mode_qlen => 2000, % synchronous mode is disabled. That is, the handler always runs
          flush_qlen => 5000,     % in asynchronous mode, unless dropping or flushing is invoked.
          overload_kill_enable => true
          % Documentation about Overload protection, together with default values, can be found here:
          % http://erlang.org/doc/apps/kernel/logger_chapter.html#protecting-the-handler-from-overload
        },
        formatter => {flatlog, #{
          map_depth => 3,
          term_depth => 50
        }}
      }},

      %% JSON file log handler:
      {handler, disk_json_log, logger_disk_log_h, #{
        level => all,
        config => #{
          file => "log/cool_tools.json",
          type => wrap,
          max_no_files => 5,
          max_no_bytes => 2097152,
          sync_mode_qlen => 2000, % If sync_mode_qlen is set to the same value as drop_mode_qlen,
          drop_mode_qlen => 2000, % synchronous mode is disabled. That is, the handler always runs
          flush_qlen => 5000,     % in asynchronous mode, unless dropping or flushing is invoked.
          overload_kill_enable => true
          % Documentation about Overload protection, together with default values, can be found here:
          % http://erlang.org/doc/apps/kernel/logger_chapter.html#protecting-the-handler-from-overload
        },
        formatter => {cool_tools_json_formatter, #{
          format_depth => 10,
          format_chars_limit => 3000,
          depth => 10
        }}
      }}

    ]}]}
].